input {
#  file {
#    path => "/logs/backend1/app.log" #컨테이너 외부에서 볼륨으로 전달 받은 log데이터
#    start_position => "beginning"
#    sincedb_path => "/dev/null"  # 로그 변경사항 감지 초기화용
#    type => "backend1"
#  }
#  file {
#    path => "/logs/backend2/app.log"
#    start_position => "beginning"
#    sincedb_path => "/dev/null"  # 로그 변경사항 감지 초기화용
#    type => "backend2"
#    }
#  file {
#    path => "/logs/backend3/app.log"
#    start_position => "beginning"
#    sincedb_path => "/dev/null"  # 로그 변경사항 감지 초기화용
#    type => "backend3"
#  }
    file {
      path => "/logs/app.log"
      start_position => "beginning"
      sincedb_path => "/dev/null"  # 로그 변경사항 감지 초기화용
      type => "backend3"
    }
}

filter {
#아래 규칙에서 자동으로 키워드로 형성되어 키바나에서 확인 가능
  grok {
    match => {
      "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{DATA:thread}\] \[%{LOGLEVEL:level}\s*\] %{JAVACLASS:logger} - %{GREEDYDATA:log}"
    }
  }


   # 로그가 AOP 로그인지 식별
   if "AOP_LOG" in [message] {
     mutate {
       add_field => { "log_type" => "aop" }
     }
   }
   else if "OAuth2_LOG" in [message]{
     mutate {
       add_field => { "log_type" => "OAuth2" }
     }
   }


  date {
    match => ["timestamp", "yyyy-MM-dd HH:mm:ss.SSS"]
    timezone => "Asia/Seoul"
    target => "@timestamp"
  }
}

output {
   # log 전용이고 검색 엔진이랑은 상관없은 검색엔진은 logstash 안씀
   #엘라스틱서치에서 해당 이름의 인덱스가 없으면 자동 생성함
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "spring-logs-%{+YYYY.MM.dd}"
  }
  stdout { codec => rubydebug } # 디버깅용
}
