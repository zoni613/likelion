PUT /board-index
{
  "settings": {
    //"number_of_shards": 3,  //샤드 3개
    //"number_of_replicas": 1,  //복제본 1개

    "index.max_ngram_diff": 3, //중간 문자 검색을 위해 단어를 쪼갤때 최대치와 최소치의 간극 정의

    "analysis": {                       // 문장 분석기 설정 영역

      "filter": {                        // 🔹 [1]"filter 정의 영역" (단어 단위로 잘라낸 후 그 단어들을 어떻게 변형할지 정의하는 영역)

        "autocomplete_filter": {           // 내가 정의한 filter 이름
          "type": "edge_ngram",            //  앞에서부터 잘게 자름   예) 예: "spring" → "s", "sp", "spr", "spri", "sprin", "spring"
          "min_gram": 1,                    // 최소 몇 글자부터 자를지
          "max_gram": 20                    // 최대 몇 글자까지 자를지
        },

        //중간 문자 검색
        "ngram_filter": {
          "type": "ngram", // 단어를  2~5글자씩 잘라서 부분 문자열을 만듬 (아래 정한 수치의 글자수 만큼)
          "min_gram": 2,  // 예) "spring" ->  2글자 : sp, pr, ri, in, ng   3글자 : spr, pri, rin, ing
          "max_gram": 5
        },

        //초성
        "chosung_filter": {
           "type": "hanhinsam_chosung"
        }

      },

      "analyzer": {                        // 실제로 문장을 분석할 때 사용할 분석기를 정의하는 곳 (위에서 정의할 필터를 사용하는 곳)

        //접두어 검색
        "autocomplete_analyzer": {         // 내가 정의한 커스텀 분석기 이름
          "type": "custom",                // 내가 만든 커스텀 분석기 사용
          "tokenizer": "standard",         // 단어 단위로 분리  (공백, 특수문자 등 기준으로 단어 분리) -> ppt에 종류 있음
          "filter": [                       // 🔸 [2] "어떤 필터들을 사용할지 나열"
            "lowercase",                   // 소문자로 통일
            "autocomplete_filter"         // 위에서 정의한 필터를 사용 (접두사 조각 생성)  예) 예: "spring" → "s", "sp", "spr", "spri", "sprin", "spring"
          ]
        },

        //중간 문자열 검색
        "ngram_analyzer": {
           "type": "custom",
           "tokenizer": "standard",
           "filter": [
              "lowercase",
              "ngram_filter"
            ]
        },

        //초성 검색
        "chosung_analyzer": {
          "type": "custom",
          "tokenizer": "standard",
          "filter": [
            "chosung_filter"
          ]
        }

      }
    }



  },

  "mappings": {
    "properties": {

      "_class": {                          //spring data elasticsearch에서 객체를 저장할 때 자동으로 추가하는 메타데이터
        "type": "keyword",
        "index": false,                   // 🔒 저장은 되지만 검색/정렬에서 제외
        "doc_values": false              // 🔒 집계에도 사용 안 함
      },

      "content": {

        "type": "text",                     //  ✅ 자연어 문장을 검색할 수 있는 필드라는 의미    -> ppt에 종류 있음
        "analyzer": "autocomplete_analyzer", // ✅ (인덱싱용)  텍스트를 어떻게 쪼개서 색인(저장)할지  (위 settings -> analysis -> analyzer 에서 만든 분석기 사용)
        "search_analyzer": "standard",       // ✅ (검색용)  검색 시에는 어떻게 분석해서 찾을지   -> ppt에 종류 있음


        //서브 필드 (서브 필드는 쿼리에서 명시적으로 필드명을 지정할 때만 적용이 됨)
        "fields": {                         //여러 방식으로 색인/검색하고 싶을 때 추가로 사용하는 서브필드

          "keyword": {                  //정확히 일치하는 값으로 검색
            "type": "keyword",
            "ignore_above": 256          // ✅ 256자 이상인 문자열은 인덱싱하지 않겠다는 설정  (일반적으로 Elasticsearch의 성능 보호를 위한 제한)
          },


          "chosung": {                        // 초성 검색 전용 필드
            "type": "text",
            "analyzer": "chosung_analyzer"      // ✅ 초성검색
          },


          "ngram": {                        //중간 문자열 검색
            "type": "text",
            "analyzer": "ngram_analyzer"
          }

        }
      },


      "title": {
        "type": "text",
        "analyzer": "autocomplete_analyzer",
        "search_analyzer": "standard",

        "fields": {

          "keyword": {
            "type": "keyword",
            "ignore_above": 256
          },

          "chosung": {                               // 초성 검색 전용 필드
            "type": "text",
            "analyzer": "chosung_analyzer"
          },

          "ngram": {
            "type": "text",
            "analyzer": "ngram_analyzer"
          }
        }
      },


      "id": {
        "type": "text",                   // ⚠️ 원래는 keyword로 쓰는 게 더 좋음 (식별자니까)
        "fields": {
          "keyword": {
            "type": "keyword",
            "ignore_above": 256
          }
        }
      },

      "userId": {
        "type": "long"                    // 사용자 ID (정수형 필터/정렬 가능)
      },

      "username": {
        "type": "text",                   // 사용자 이름 (검색용)
        "fields": {
          "keyword": {
            "type": "keyword",
            "ignore_above": 256          // 정렬/집계용
          }
        }
      },

      "created_date": {
          "type": "date",
          "format": "yyyy-MM-dd HH:mm:ss.SSSSSS||yyyy-MM-dd HH:mm:ss||strict_date_optional_time||epoch_millis" //여러 개의 포맷 중 하나라도 맞으면 날짜로 인식
      },

      "updated_date": {
          "type": "date",
          "format": "yyyy-MM-dd HH:mm:ss.SSSSSS||yyyy-MM-dd HH:mm:ss||strict_date_optional_time||epoch_millis"
      }

    }
  }
}


